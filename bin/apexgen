#!/usr/bin/env ruby
require 'gli'
require 'apexgen'

include GLI::App

program_desc 'A command line app to help generate basic scaffolding for different code used on the salesforce/force.com platforms'

version Apexgen::VERSION

# desc 'Describe some switch here'
# switch [:s,:switch]

desc 'Change the destination of files generated by command'
default_value ''
arg_name '/path/to/dir'
flag [:d,:dir]

desc 'Generate objects, complete with object fields and field settings.'
long_desc """
Create object metadata to be pushed via the migration tool or salesforceIDE. You may specify several fields. Fields are specified with the following syntax:

`FieldName:TypeName[type_related_options,another_option]`

Picklists are special:

`FieldName:Picklist(option1, option2:default, option3)[type_related_options,another_option]`
"""
arg_name 'object_name [field[:type]...]'
command :object do |c|
  # c.desc 'Describe a switch to object'
  # c.switch :s

  c.desc 'Name of the folder to place the object in'
  c.default_value 'objects'
  c.flag [:f, :folder]

  c.desc 'Objects plural name'
  c.flag [:p, :pluralname]

  c.action do |global_options,options,args|
    help_now! "You must specify a custom object name" if args.length == 0

    object_name = args.shift
    obj = Apexgen::CustomObject.new object_name, args

    puts "Object created"
  end
end

pre do |global,command,options,args|
  # Pre logic here
  # Return true to proceed; false to abourt and not call the
  # chosen command
  # Use skips_pre before a command to skip this block
  # on that command only
  true
end

post do |global,command,options,args|
  # Post logic here
  # Use skips_post before a command to skip this
  # block on that command only
end

on_error do |exception|
  # Error logic here
  # return false to skip default error handling
  true
end

exit run(ARGV)
